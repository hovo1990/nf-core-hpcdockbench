#!/pro/icm/icms/icm64 -s
HELP = """
  Usage> $P -i=<.icb>  -o=<outputfile.icb>
   This prepares a docking project compatible with icm
"""


if (Getarg(help)) quit HELP
l_commands = Getarg("-v",no,delete)



input_csv_arg = Getarg("-i","UNDEFINED",delete)
s_output_file = Getarg("-o","UNDEFINED",delete)

n_proc = Getarg("-nproc",4,delete)

# check if file exists
if(!Exist(input_csv_arg read)) quit " Error_$P: file '" input_protein_arg "' not found or not readable."



read library
call _macro
call _startup
# call _dockScan


# quit 1
# exit

read table separator="," input_csv_arg  name="mainT"

# -- * Rename columns
rename mainT.A "Project"
rename mainT.B "Dataset"
rename mainT.C "Code"
rename mainT.D "Structure"
rename mainT.E "Ligand"
rename mainT.F "Ligand_ICM_2D"


# -- * Read molecules from Ligand and Ligand_ICM_2D
for i in Nof(mainT) then
    lig_sdf = mainT.Ligand [i]
    lig_2d_sdf = mainT.Ligand_ICM_2D [i]

    read table mol lig_sdf  name="temp_lig"
    read table mol lig_2d_sdf  name="temp_2d_lig"

    add column temp_lig temp_2d_lig.mol  name='lig_2D'
    add column temp_lig temp_2d_lig.sel  name='lig_sel_name'

    # to rotate by common substructure so it will be easier to see what is going on
    find sstructure result.mol



    T_common.mol[1]
    common_mol = T_common.mol[1]



    select chemical result.mol_query common_mol rotate
    select chemical result.mol common_mol rotate
    select chemical result.mol2D  common_mol rotate




endofr

# -- * Save as sdf file
write table mol append mainT s_output_file



if (Error()) then
  printf error " Error> Could not prepare for docking\n"
  quit 1
endif

print " Info> System for docking has been prepared\n"
quit 0


